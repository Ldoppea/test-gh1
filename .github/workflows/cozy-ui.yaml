name: Build and Deploy Cozy-uis
on:
  push:
    branches: [ main ]
  pull_request:
env:
  ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_modules
  installPuppeteer:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_puppeteer
  preBuild:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - name: Lint
        run: echo "yarn lint"
      - name: Generate Sprite and Palette
        run: echo "yarn makeSpriteAndPalette"
  build:
    needs: [preBuild]
    runs-on: ubuntu-latest
    steps:
      - name: Build JS
        run: echo "yarn build"
      - name: Build CSS
        run: echo "yarn build:css:all"
      - name: Build docs
        run: echo "tout court on s'en fout de ce qu'il prompt, haha il est chiant"
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Tests without snapshots
        run: echo "yarn test:noSnapshots"
      - name: Tests snapshots
        run: echo "yarn test:snapshots"
  argosPrepare:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Argos - Prepare env
        run: echo "argos"
  argosDesktop:
    needs: [argosPrepare]
    runs-on: ubuntu-latest
    steps:
      - name: Argos - Create desktop screenshots
        run: echo "argos"
  argosMobile:
    needs: [argosPrepare]
    runs-on: ubuntu-latest
    steps:
      - name: Argos - Create mobile screenshots
        run: echo "argos"
  argosKss:
    needs: [argosPrepare]
    runs-on: ubuntu-latest
    steps:
      - name: Argos - Create kss screenshots
        run: echo "argos"
  argosUpload:
    needs: [argosDesktop, argosMobile, argosKss]
    runs-on: ubuntu-latest
    steps:
      - name: Argos - Upload all screenshots
        run: echo "argos"
  deploy:
      needs: [argosUpload]
      steps:
        - name: Deploy
          if: ${{ github.ref_name == 'master' }}
          run: |
            echo "edploy"